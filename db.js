const Sequelize = require("sequelize");
const path = require("path");

const mergedDatabse = path.resolve("./data/", "dataset.db");
console.log(mergedDatabse);
const sequelize = new Sequelize("main", null, null, {
  dialect: "sqlite",
  storage: mergedDatabse,
  logging: false,
});

const Asset = sequelize.define(
  "asset",
  {
    id: {
      type: Sequelize.INTEGER,
      allowNull: false,
      primaryKey: true,
      autoIncrement: true,
      _autoGenerated: true,
    },
    collection: Sequelize.STRING,
    asset_contract: Sequelize.STRING,
    token_id: Sequelize.STRING,
    num_sales: Sequelize.INTEGER,
    image_url: Sequelize.STRING,
    name: Sequelize.STRING,
    permalink: Sequelize.STRING,
    owner: Sequelize.STRING,
    fetched: Sequelize.TINYINT,
    traits: Sequelize.STRING,
  },
  {
    indexes: [
      {
        fields: ["collection", "token_id", "num_sales", "fetched"],
      },
    ],
  }
);

const Event = sequelize.define(
  "event",
  {
    id: {
      type: Sequelize.INTEGER,
      allowNull: false,
      primaryKey: true,
      autoIncrement: true,
      _autoGenerated: true,
    },
    contract_address: Sequelize.STRING,
    collection_slug: Sequelize.STRING,
    created_date: Sequelize.DATE,
    event_type: Sequelize.STRING,
    from_account: Sequelize.STRING,
    to_account: Sequelize.STRING,
    transaction: Sequelize.STRING,
    transaction_from_account: Sequelize.STRING,
    transaction_to_account: Sequelize.STRING,
    raw: Sequelize.STRING,
  },
  {
    indexes: [
      {
        fields: [
          "event_type",
          "contract_address",
          "collection_slug",
          "created_date",
          "from_account",
          "to_account",
        ],
      },
    ],
  }
);

// Asset.sync({ alter: true });
// Event.sync({ alter: true });

module.exports = {
  sequelize,
  Asset,
  Event,
};
